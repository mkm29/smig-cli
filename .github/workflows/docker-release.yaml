name: Docker Release
on:
  push:

env:
  REGISTRY: ${{ vars.REGION }}-docker.pkg.dev/${{ vars.PROJECT_ID }}/docker
  IMAGE_NAME: smig-cli

jobs:
  docker-release:
    name: Tagged Docker release to Google Artifact Registry
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    # && startsWith(github.ref, 'refs/tags')  # <-- Notice that I'm filtering here to only run when a tagged commit is pushed

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - id: checkout
        name: Checkout
        uses: actions/checkout@v2

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@6e04d228eb30da1757ee4e1dd75a0ec73a653e06 #v3.1.1
        with:
          cosign-release: 'v2.1.1'

      - id: auth
        name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          token_format: access_token
          workload_identity_provider: ${{ vars.WIF_PROVIDER }}
          service_account: ${{ vars.SA_EMAIL}}
          access_token_lifetime: 300s

      - name: Login to Artifact Registry
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: us-east1-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

    #   - name: Get tag
    #     id: get-tag
    #     run: echo ::set-output name=short_ref::${GITHUB_REF#refs/*/}

      - id: docker-push-tagged
        name: Tag Docker image and push to Google Artifact Registry
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - id: auth2
        uses: 'google-github-actions/auth@v2'
        with:
          project_id: ${{ vars.PROJECT_ID }}
          workload_identity_provider: ${{ vars.WIF_PROVIDER }}
          service_account: ${{ vars.SA_EMAIL }}
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
      - name: set crdential_file
        run: gcloud auth login --cred-file=${{steps.auth2.outputs.credentials_file_path}}

      # Get GPG key from Google KMS
      - name: Sign Image
        id: sign-image
        run: |
          cosign generate-key-pair --kms gcpkms://projects/${{ vars.PROJECT_ID }}/locations/${{ vars.REGION }}/keyRings/${{ vars.KEY_RING }}/cryptoKeys/${{ vars.KEY_NAME }}
          # get digest from docker-push-tagged step
          SHA=${{ steps.docker-push-tagged.outputs.digest }}
          cosign sign --yes --key gcpkms://projects/${{ vars.PROJECT_ID }}/locations/${{ vars.REGION }}/keyRings/${{ vars.KEY_RING }}/cryptoKeys/${{ vars.KEY_NAME }} ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${SHA}           